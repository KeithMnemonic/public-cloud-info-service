AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  pint-server-ng

  Public Cloud Info Service Next Generation (NG)

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  LambdaSg:
    Description: "Lambda security group ID"
    Type: AWS::EC2::SecurityGroup::Id
  LambdaSubnets:
    Description: "Lambda subnets"
    Type: List<AWS::EC2::Subnet::Id>
  DBResourceId:
    Type: String
    Description: "RDS-DB instance resource identifier"
  DBEndpoint:
    Type: String
    Description: "Amazon RDS Postgres endpoint"
  DBName:
    Type: String
    Description: "Name of the database connected"
    Default: postgre
  DBUsername:
    Type: String
    NoEcho: true
  DBPassword:
    Type: String
    Description: "Database password: WARNING: for testing only!"
    NoEcho: true
  DBSSLMode:
    Type: String
    Description: "Indication whether to use TLS/SSL connection."
    Default: ""
  DBTrustedCertFile:
    Type: String
    Description: "Path to the trusted certificates file."
    Default: "" 

Resources:

  PintServerNG:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Events:
        PintServerNG:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: '/{proxy+}'
            Method: GET
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSg
        SubnetIds: !Ref LambdaSubnets
      Policies:
        -
          Version:  '2012-10-17'
          Statement:
            Effect: Allow
            Action:
              - rds-db:connect
            Resource:
              - !Sub "arn:aws:rds-db:${AWS::Region}:${AWS::AccountId}:dbuser:${DBResourceId}/${DBUsername}"
      Environment:
        Variables:
          POSTGRES_HOST: !Ref DBEndpoint
          POSTGRES_USER: !Ref DBUsername
          POSTGRES_PASSWORD: !Ref DBPassword
          POSTGRES_DB: !Ref DBName
          POSTGRES_SSL_MODE: !Ref DBSSLMode
          POSTGRES_SSL_ROOT_CERTIFICATE: !Ref DBTrustedCertFile
    Metadata:
      DockerTag: pintserver-v1
      DockerContext: .
      Dockerfile: Dockerfile.sle15


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  PintAPI:
    Description: "API Gateway endpoint URL for Prod stage for Pint API Server function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/v1/"
  PintAPIFunction:
    Description: "Pint API Server Lambda Function ARN"
    Value: !GetAtt PintAPIFunction.Arn
  PintAPIIamRole:
    Description: "Implicit IAM Role created for Pint API Server function"
    Value: !GetAtt PintAPIFunctionRole.Arn
